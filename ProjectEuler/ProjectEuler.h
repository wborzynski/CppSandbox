/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/* 
 * File:   ProjectEuler.h
 * Author: W
 *
 * Created on October 25, 2017, 11:26 PM
 */

#ifndef PROJECTEULER_H
#define PROJECTEULER_H

class ProjectEuler
{
    public:
        /*
         * Problem 1
         * Multiples of 3 and 5
         * If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
         * Find the sum of all the multiples of 3 or 5 below 1000. 
         */
        static int SumOfMultiplesUnder(int a, int b, int max)
        {
            int sum;

            sum = SumOfMultiplesUnder(a, max) + SumOfMultiplesUnder(b, max) - SumOfMultiplesUnder(a*b, max);
        }
        
        static int SumOfMultiplesUnder(int n, int max)
        {
            int sum = 0;
            for(int i = 1; i*n < max; ++i)
            {
                sum+= i*n;
            }
            return sum;
        }
        
        /*
         * Problem 2 
         * Even Fibonacci numbers
         * 
         * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
         * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
         * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
         */
        static int EvenFibonacciNumbersUnder(int n)
        {
            int i1 = 1;
            int i2 = 2;
            int sumEvens = 0;
            
            std::cout << i1 <<std::endl;
                
            while(i2 < n)
            {
                if(i2 % 2 == 0)
                    sumEvens+=i2;
                
                int tmp = i1;
                i1 = i2;
                i2 = tmp + i2;
            }
            return sumEvens;
        }
};

#endif /* PROJECTEULER_H */

